mu <- a + b*( weight - xbar ) ,
a ~ dnorm( 178 , 20 ) ,
b ~ dlnorm( 0 , 1 ) ,
sigma ~ dunif( 0 , 50 )
) ,
data=d2 )
#Simulation and prediction
sim.height <- sim( model , list( weight=answer.sheet$Weight ))
#Calculate mean height
height.mean <- round( apply( sim.height , 2 , mean ) , 3 )
answer.sheet$`Expected height` <- height.mean
#Calculate 89% interval
height.HPDI <- round( apply( sim.height , 2 , HPDI , prob=0.89) , 3 )
answer.sheet$`89% interval` <- sapply( 1:5 , function(i)
paste( "( " , height.HPDI[ 1 , i ] , " , " , height.HPDI[ 2 , i ] , " )" )
)
#Answer
answer.sheet
#Calculate mean height
str(apply( sim.height.predict , 2 , mean ))
str(mu.predict.mean)
#Calculate mean height
str(apply( sim.height.predict , 2 , mean ))
#Calculate mean height
height.mean <- round( mu.predict.mean , 3 )
answer.sheet$`Expected height` <- height.mean
#Calculate 89% interval
height.HPDI <- round( height.predict.PI , 3 )
answer.sheet$`89% interval` <- sapply( 1:5 , function(i)
paste( "( " , height.HPDI[ 1 , i ] , " , " , height.HPDI[ 2 , i ] , " )" )
)
#Answer
answer.sheet
library(rethinking)
rm(list=ls())
##Question 1
#Create answer sheet
answer.sheet <- data.frame(
list(
"Individual" = c( 1 , 2 , 3 , 4 , 5 ),
"Weight" = c( 46.95 , 43.72 , 64.78 , 32.59 , 54.63 ),
"Expected height" = rep( "NA" , 5 ),
"89% interval" = rep( "NA" , 5 )
) , check.names=FALSE
)
answer.sheet
#Load data
data(Howell1)
d <- Howell1
#Inspect data
str(d)
precis(d)
#Use cubic regression to fit the data
#Standardize predictors
d$weight_s <- ( d$weight - mean(d$weight) )/sd( d$weight )
d$weight_s2 <- d$weight_s^2
d$weight_s3 <- d$weight_s^3
#Create model using quadratic approximation
model.fit <- quap(
alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b1*weight_s + b2*weight_s2 + b3*weight_s3 ,
a ~ dnorm( 178 , 20 ) ,
b1 ~ dlnorm( 0 , 1 ) ,
b2 ~ dnorm( 0 , 10 ) ,
b3 ~ dnorm( 0 , 10 ) ,
sigma ~ dunif( 0 , 50 )
) ,
data=d )
#Inspect the model
#Create a sequence of standardized weights
weight.seq <- seq( from=-2.2 , to=2 , length.out=30 )
#Create a list of predictors
pred_dat <- list( weight_s=weight.seq , weight_s2=weight.seq^2 , weight_s3=weight.seq^3 )
#Sampling from posterior distribution, and compute mu for each pred_dat
mu <- link( model.fit , data=pred_dat )
#Calculate the mean of mu and 89% interval of mean
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
#Simulate 10000 predicted heights for each pred_dat
sim.height <- sim( model.fit , data=pred_dat, n=1e4 )
#Calculate the 89% interval of predicted heights
height.PI <- apply( sim.height , 2 , PI , prob=0.89 )
#Plot the results of fitted models with raw data
plot( height ~ weight_s , d , col=col.alpha(rangi2,0.5) )
lines( weight.seq , mu.mean )
shade( mu.PI , weight.seq )
shade( height.PI , weight.seq )
#Standardize the weight data in answer.sheet
weight_predict_s <- ( answer.sheet$Weight - mean(d$weight) )/sd( d$weight )
#Create the predictors of the cube regression
weight_predictors <- list( weight_s=weight_predict_s , weight_s2=weight_predict_s^2 , weight_s3=weight_predict_s^3 )
#Sampling from posterior distribution, and compute mu for each weight_predictors
mu.predict <- link( model.fit , data=weight_predictors )
#Calculate the mean of predicted heights and 89% interval of mean
mu.predict.mean <- apply( mu.predict , 2 , mean )
mu.predict.PI <- apply( mu.predict , 2 , PI , prob=0.89 )
#Simulate predicted heights for each weight_predictors
sim.height.predict <- sim( model.fit , data=weight_predictors )
#Calculate the 89% interval of predicted heights
height.predict.PI <- apply( sim.height.predict , 2 , PI , prob=0.89 )
#Add mean heights into answer.sheet
height.mean <- round( mu.predict.mean , 3 )
answer.sheet$`Expected height` <- height.mean
#Add 89% intervals into answer.sheet
height.HPDI <- round( height.predict.PI , 3 )
answer.sheet$`89% interval` <- sapply( 1:5 , function(i)
paste( "( " , height.HPDI[ 1 , i ] , " , " , height.HPDI[ 2 , i ] , " )" )
)
#Answer
answer.sheet
Howell1.data <- Howell1
##Question 2
#2-a
#Filter - children
d2 <- Howell1.data[ d$age < 18 , ]
#Inspect d2
precis(d2)
#Create data list for stan model
data_list <- list(
children_height = d2$height,
children_weight = d2$weight,
children_age = d2$age,
children_male = d2$male
)
#Inspect data list
str(data_list)
#Compute mean weight of data in d2
children_mean_weight <- mean( d2$weight )
children_mean_weight
model2 <- ulam(
alist(
children_height ~ dnorm( mu , sigma ) ,
mu <- a + b*( children_weight - 18.41419 ) ,
a ~ dnorm( 178 , 20 ) ,
b ~ dlnorm( 0 , 1 ) ,
sigma ~ dunif( 0 , 50 )
) ,
data=data_list , chains=4 , cores=4 , iter=1000 )
precis( model2 )
children.weight.seq <- seq( from=0 , to=80 , by=1 )
children.predict.data <- list( children_weight=children.weight.seq )
link( model2 , children.predict.data )
mu.predict <- link( model2 , children.predict.data )
children.mu.predict <- link( model2 , children.predict.data )
children.mu.predict.mean <- apply( children.mu.predict , 2 , mean )
children.mu.predict.PI <-apply( children.mu.predict , 2 , PI , prob=0.89 )
children.weight.seq <- seq( from=0 , to=80 , by=1 )
children.predict.data <- list( children_weight=children.weight.seq )
children.mu.predict <- link( model2 , data=children.predict.data )
children.mu.predict.mean <- apply( children.mu.predict , 2 , mean )
children.mu.predict.PI <- apply( children.mu.predict , 2 , PI , prob=0.89 )
children.height.predict <- sim( model2 , data=children.predict.data )
#Calculate the 89% interval of predicted heights
children.height.predict.PI <- apply( children.height.predict , 2 , PI , prob=0.89 )
plot( height ~ weight , d2 , col=col.alpha(rangi2,0.5) )
lines( children.weight.seq , children.mu.predict.mean )
shade( children.mu.predict.PI , children.weight.seq )
shade( children.height.predict.PI , children.weight.seq )
library(rethinking)
rm(list=ls())
##Question 1
#Create answer sheet
answer.sheet <- data.frame(
list(
"Individual" = c( 1 , 2 , 3 , 4 , 5 ),
"Weight" = c( 46.95 , 43.72 , 64.78 , 32.59 , 54.63 ),
"Expected height" = rep( "NA" , 5 ),
"89% interval" = rep( "NA" , 5 )
) , check.names=FALSE
)
answer.sheet
#Load data
data(Howell1)
Howell1.data <- Howell1
d <- Howell1
#Inspect data
str(d)
precis(d)
#Use cubic regression to fit the data
#Standardize predictors
d$weight_s <- ( d$weight - mean(d$weight) )/sd( d$weight )
d$weight_s2 <- d$weight_s^2
d$weight_s3 <- d$weight_s^3
#Create model using quadratic approximation
model.fit <- quap(
alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b1*weight_s + b2*weight_s2 + b3*weight_s3 ,
a ~ dnorm( 178 , 20 ) ,
b1 ~ dlnorm( 0 , 1 ) ,
b2 ~ dnorm( 0 , 10 ) ,
b3 ~ dnorm( 0 , 10 ) ,
sigma ~ dunif( 0 , 50 )
) ,
data=d )
#Inspect the model
#Create a sequence of standardized weights
weight.seq <- seq( from=-2.2 , to=2 , length.out=30 )
#Create a list of predictors
pred_dat <- list( weight_s=weight.seq , weight_s2=weight.seq^2 , weight_s3=weight.seq^3 )
#Sampling from posterior distribution, and compute mu for each pred_dat
mu <- link( model.fit , data=pred_dat )
#Calculate the mean of mu and 89% interval of mean
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
#Simulate 10000 predicted heights for each pred_dat
sim.height <- sim( model.fit , data=pred_dat, n=1e4 )
#Calculate the 89% interval of predicted heights
height.PI <- apply( sim.height , 2 , PI , prob=0.89 )
#Plot the results of fitted models with raw data
plot( height ~ weight_s , d , col=col.alpha(rangi2,0.5) )
lines( weight.seq , mu.mean )
shade( mu.PI , weight.seq )
shade( height.PI , weight.seq )
#Standardize the weight data in answer.sheet
weight_predict_s <- ( answer.sheet$Weight - mean(d$weight) )/sd( d$weight )
#Create the predictors of the cube regression
weight_predictors <- list( weight_s=weight_predict_s , weight_s2=weight_predict_s^2 , weight_s3=weight_predict_s^3 )
#Sampling from posterior distribution, and compute mu for each weight_predictors
mu.predict <- link( model.fit , data=weight_predictors )
#Calculate the mean of predicted heights and 89% interval of mean
mu.predict.mean <- apply( mu.predict , 2 , mean )
mu.predict.PI <- apply( mu.predict , 2 , PI , prob=0.89 )
#Simulate predicted heights for each weight_predictors
sim.height.predict <- sim( model.fit , data=weight_predictors )
#Calculate the 89% interval of predicted heights
height.predict.PI <- apply( sim.height.predict , 2 , PI , prob=0.89 )
#Add mean heights into answer.sheet
height.mean <- round( mu.predict.mean , 3 )
answer.sheet$`Expected height` <- height.mean
#Add 89% intervals into answer.sheet
height.HPDI <- round( height.predict.PI , 3 )
answer.sheet$`89% interval` <- sapply( 1:5 , function(i)
paste( "( " , height.HPDI[ 1 , i ] , " , " , height.HPDI[ 2 , i ] , " )" )
)
#Answer
answer.sheet
library(rethinking)
rm(list=ls())
##Question 1
#Create answer sheet
answer.sheet <- data.frame(
list(
"Individual" = c( 1 , 2 , 3 , 4 , 5 ),
"Weight" = c( 46.95 , 43.72 , 64.78 , 32.59 , 54.63 ),
"Expected height" = rep( "NA" , 5 ),
"89% interval" = rep( "NA" , 5 )
) , check.names=FALSE
)
answer.sheet
#Load data
data(Howell1)
Howell1.data <- Howell1
d <- Howell1
#Inspect data
str(d)
precis(d)
#Use cubic regression to fit the data
#Standardize predictors
d$weight_s <- ( d$weight - mean(d$weight) )/sd( d$weight )
d$weight_s2 <- d$weight_s^2
d$weight_s3 <- d$weight_s^3
#Create model using quadratic approximation
model.fit <- quap(
alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b1*weight_s + b2*weight_s2 + b3*weight_s3 ,
a ~ dnorm( 178 , 20 ) ,
b1 ~ dlnorm( 0 , 1 ) ,
b2 ~ dnorm( 0 , 10 ) ,
b3 ~ dnorm( 0 , 10 ) ,
sigma ~ dunif( 0 , 50 )
) ,
data=d )
#Inspect the model
#Create a sequence of standardized weights
weight.seq <- seq( from=-2.2 , to=2 , length.out=30 )
#Create a list of predictors
pred_dat <- list( weight_s=weight.seq , weight_s2=weight.seq^2 , weight_s3=weight.seq^3 )
#Set random seed
set.seed(100)
#Sampling from posterior distribution, and compute mu for each pred_dat
mu <- link( model.fit , data=pred_dat )
#Calculate the mean of mu and 89% interval of mean
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
#Simulate 10000 predicted heights for each pred_dat
sim.height <- sim( model.fit , data=pred_dat, n=1e4 )
#Calculate the 89% interval of predicted heights
height.PI <- apply( sim.height , 2 , PI , prob=0.89 )
#Plot the results of fitted models with raw data
plot( height ~ weight_s , d , col=col.alpha(rangi2,0.5) )
lines( weight.seq , mu.mean )
shade( mu.PI , weight.seq )
shade( height.PI , weight.seq )
#Standardize the weight data in answer.sheet
weight_predict_s <- ( answer.sheet$Weight - mean(d$weight) )/sd( d$weight )
#Create the predictors of the cube regression
weight_predictors <- list( weight_s=weight_predict_s , weight_s2=weight_predict_s^2 , weight_s3=weight_predict_s^3 )
#Sampling from posterior distribution, and compute mu for each weight_predictors
mu.predict <- link( model.fit , data=weight_predictors )
#Calculate the mean of predicted heights and 89% interval of mean
mu.predict.mean <- apply( mu.predict , 2 , mean )
mu.predict.PI <- apply( mu.predict , 2 , PI , prob=0.89 )
#Simulate predicted heights for each weight_predictors
sim.height.predict <- sim( model.fit , data=weight_predictors )
#Calculate the 89% interval of predicted heights
height.predict.PI <- apply( sim.height.predict , 2 , PI , prob=0.89 )
#Add mean heights into answer.sheet
height.mean <- round( mu.predict.mean , 3 )
answer.sheet$`Expected height` <- height.mean
#Add 89% intervals into answer.sheet
height.HPDI <- round( height.predict.PI , 3 )
answer.sheet$`89% interval` <- sapply( 1:5 , function(i)
paste( "( " , height.HPDI[ 1 , i ] , " , " , height.HPDI[ 2 , i ] , " )" )
)
#Answer
answer.sheet
library(rethinking)
rm(list=ls())
##Question 1
#Create answer sheet
answer.sheet <- data.frame(
list(
"Individual" = c( 1 , 2 , 3 , 4 , 5 ),
"Weight" = c( 46.95 , 43.72 , 64.78 , 32.59 , 54.63 ),
"Expected height" = rep( "NA" , 5 ),
"89% interval" = rep( "NA" , 5 )
) , check.names=FALSE
)
answer.sheet
#Load data
data(Howell1)
Howell1.data <- Howell1
d <- Howell1
#Inspect data
str(d)
precis(d)
#Use cubic regression to fit the data
#Standardize predictors
d$weight_s <- ( d$weight - mean(d$weight) )/sd( d$weight )
d$weight_s2 <- d$weight_s^2
d$weight_s3 <- d$weight_s^3
#Create model using quadratic approximation
model.fit <- quap(
alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b1*weight_s + b2*weight_s2 + b3*weight_s3 ,
a ~ dnorm( 178 , 20 ) ,
b1 ~ dlnorm( 0 , 1 ) ,
b2 ~ dnorm( 0 , 10 ) ,
b3 ~ dnorm( 0 , 10 ) ,
sigma ~ dunif( 0 , 50 )
) ,
data=d )
#Inspect the model
#Create a sequence of standardized weights
weight.seq <- seq( from=-2.2 , to=2 , length.out=30 )
#Create a list of predictors
pred_dat <- list( weight_s=weight.seq , weight_s2=weight.seq^2 , weight_s3=weight.seq^3 )
#Set random seed
set.seed(100)
#Sampling from posterior distribution, and compute mu for each pred_dat
mu <- link( model.fit , data=pred_dat )
#Calculate the mean of mu and 89% interval of mean
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
#Simulate 10000 predicted heights for each pred_dat
sim.height <- sim( model.fit , data=pred_dat, n=1e4 )
#Calculate the 89% interval of predicted heights
height.PI <- apply( sim.height , 2 , PI , prob=0.89 )
#Plot the results of fitted models with raw data
plot( height ~ weight_s , d , col=col.alpha(rangi2,0.5) )
lines( weight.seq , mu.mean )
shade( mu.PI , weight.seq )
shade( height.PI , weight.seq )
#Standardize the weight data in answer.sheet
weight_predict_s <- ( answer.sheet$Weight - mean(d$weight) )/sd( d$weight )
#Create the predictors of the cube regression
weight_predictors <- list( weight_s=weight_predict_s , weight_s2=weight_predict_s^2 , weight_s3=weight_predict_s^3 )
#Sampling from posterior distribution, and compute mu for each weight_predictors
mu.predict <- link( model.fit , data=weight_predictors )
#Calculate the mean of predicted heights and 89% interval of mean
mu.predict.mean <- apply( mu.predict , 2 , mean )
mu.predict.PI <- apply( mu.predict , 2 , PI , prob=0.89 )
#Simulate predicted heights for each weight_predictors
sim.height.predict <- sim( model.fit , data=weight_predictors )
#Calculate the 89% interval of predicted heights
height.predict.PI <- apply( sim.height.predict , 2 , PI , prob=0.89 )
#Add mean heights into answer.sheet
height.mean <- round( mu.predict.mean , 3 )
answer.sheet$`Expected height` <- height.mean
#Add 89% intervals into answer.sheet
height.HPDI <- round( height.predict.PI , 3 )
answer.sheet$`89% interval` <- sapply( 1:5 , function(i)
paste( "( " , height.HPDI[ 1 , i ] , " , " , height.HPDI[ 2 , i ] , " )" )
)
#Answer
answer.sheet
##Question 2
#2-a
#Filter - children
d2 <- Howell1.data[ d$age < 18 , ]
#Inspect d2
precis(d2)
#Create data list for stan model
data_list <- list(
children_height = d2$height,
children_weight = d2$weight,
children_age = d2$age,
children_male = d2$male
)
#Inspect data list
str(data_list)
#Compute mean weight of data in d2
children_mean_weight <- mean( d2$weight )
children_mean_weight
model2 <- ulam(
alist(
children_height ~ dnorm( mu , sigma ) ,
mu <- a + b*( children_weight - 18.41419 ) ,
a ~ dnorm( 178 , 20 ) ,
b ~ dlnorm( 0 , 1 ) ,
sigma ~ dunif( 0 , 50 )
) ,
data=data_list , chains=4 , cores=4 , iter=1000 )
precis( model2 )
#Since the mean slope of the regression model is 2.72, we could expect that for every 10 units of increase in weight, the model would predict the child to be 27.2 units taller.
pairs( model2 )
#2-b
#Create a sequence as each weight
children.weight.seq <- seq( from=0 , to=50 , by=1 )
#Create a list to be applies to link function with posterior model
children.to.predict <- list( children_weight=children.weight.seq )
#Sample from posterior to calculate mu
children.mu.predict <- link( model2 , data=children.to.predict )
#Calculate the mean and 89% interval of mu
children.mu.predict.mean <- apply( children.mu.predict , 2 , mean )
children.mu.predict.PI <- apply( children.mu.predict , 2 , PI , prob=0.89 )
#Simulate predicted heights regarding each weight
children.height.predict <- sim( model2 , data=children.to.predict )
#Calculate the 89% interval of predicted heights
children.height.predict.PI <- apply( children.height.predict , 2 , PI , prob=0.89 )
#Plot the results of fitted models with raw data
plot( height ~ weight , d2 , col=col.alpha(rangi2,0.5) )
lines( children.weight.seq , children.mu.predict.mean )
shade( children.mu.predict.PI , children.weight.seq )
shade( children.height.predict.PI , children.weight.seq )
#Question 3
#Create a data list for the model
data_list_3 <- list(
data_height = Howell1.data$height,
data_weight = Howell1.data$weight,
data_age = Howell1.data$age,
data_male = Howell1.data$male
)
#Inspect the data list
str(data_list_3)
#Inspect the data list
str(data_list_3)
#Apply stan model
model3 <- ulam(
alist(
data_height ~ dnorm( mu , sigma ) ,
mu <- a + b*log( data_weight ) ,
a ~ dnorm( 178 , 100 ) ,
b ~ dnorm( 0 , 100 ) ,
sigma ~ dunif( 0 , 50 )
) ,
data=data_list_3 , chains=4 , cores=4 , iter=1000 )
#Inspect results of the model
precis( model3 )
plot(height~weight, data=Howell1, col=col.alpha(rangi2, 0.4))
plot(height~weight, data=Howell1, col=col.alpha(rangi2, 0.4))
weight.seq3 <- seq( from=0 , to=70 , by=1 )
weight.list <- list( data_weight=weight.seq3 )
predict.mu <- link( model3 , data=weight.list )
weight.seq3 <- seq( from=0 , to=70 , by=1 )
weight.list <- list( data_weight=weight.seq3 )
predict.mu <- link( model3 , data=weight.list )
predict.mu.mean <- apply( predict.mu , 2 , mean )
predict.mu.PI <- apply ( predict.mu , 2 , HPDI , prob=0.97 )
predict.height <- sim( model3 , data=weight.list )
predict.height.PI <- apply( predict.height , 2 , HPDI , prob=0.97 )
line( weight.seq3 , predict.mu.mean )
#3-b
plot( height ~ weight , data=Howell1 , col=col.alpha(rangi2, 0.4) )
weight.seq3 <- seq( from=0 , to=70 , by=1 )
weight.list <- list( data_weight=weight.seq3 )
predict.mu <- link( model3 , data=weight.list )
predict.mu.mean <- apply( predict.mu , 2 , mean )
predict.mu.PI <- apply ( predict.mu , 2 , HPDI , prob=0.97 )
predict.height <- sim( model3 , data=weight.list )
predict.height.PI <- apply( predict.height , 2 , HPDI , prob=0.97 )
line( weight.seq3 , predict.mu.mean )
shade( predict.mu.PI , weight.seq3 )
shade( predict.height.PI , weight.seq3 )
plot( height ~ weight , data=Howell1 , col=col.alpha(rangi2, 0.4) )
line( weight.seq3 , predict.mu.mean )
#3-b
plot( height ~ weight , data=Howell1 , col=col.alpha(rangi2, 0.4) )
lines( weight.seq3 , predict.mu.mean )
shade( predict.mu.PI , weight.seq3 )
shade( predict.height.PI , weight.seq3 )
#Inspect results of the model
precis( model3 )
#Inspect results of the model
precis( model3 )
#show( model3 )
pairs( model3 )
round( vcov( model3 ) , 3 )
