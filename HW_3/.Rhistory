groupsize.seq <- seq( from = -3 , to = 3 , length.out = 100 )
groupsize.seq.data <- list ( G = groupsize.seq )
mu <- link( model.1.2 , data = groupsize.seq.data )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu, 2 , PI , prob = 0.95 )
# plot results
plot( W ~ G , data = data )
lines( groupsize.seq , mu.mean )
shade( mu.PI , groupsize.seq )
# Question 2
# fit the multiple linear regression with weight as the outcome and both area and groupsize as predictor variables.
model.2 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bG*G + bA*A,
a ~ dnorm( 0, 0.2 ),
bG ~ dnorm( 0, 0.5 ),
bA ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
precis(model.2)
# plot territory size vs. weight, holding groupsize constant at its mean
area.predict.data <- data.frame( A = area.seq , G = 0 )
mu <- link( model.2 , data = area.predict.data )
mu.mean <- apply( mu, 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pred.sim <- sim( model.2 , data=area.predict.data , n=1e4 )
pred.PI <- apply( pred.sim , 2 , PI, prob=0.95 )
plot( W ~ A , data = data , type = "n" )
lines( area.seq , mu.mean )
shade( mu.PI , area.seq )
shade( pred.PI , area.seq )
title('standardized weight vs. standardized area \n while holding groupsize constant at its mean')
# plot groupsize vs. weight, holding area constant at its mean
groupsize.predict.data <- data.frame( A = 0 , G = groupsize.seq )
mu <- link( model.2 , groupsize.predict.data )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob = 0.95 )
pred.sim <- sim( model.2 , data=groupsize.predict.data , n=1e4 )
pred.PI <- apply( pred.sim , 2 , PI, prob=0.95 )
plot( W ~ G , data = data , type = "n" )
lines( area.seq , mu.mean )
shade( mu.PI , area.seq )
shade( pred.PI , area.seq )
title('standardized weight vs. standardized groupsize \n while holding area constant at its mean')
plot( coeftab( model.1.1 , model.1.2 , model.2 ), par=c( "bA" , "bG" ) )
# Question 3
# model weight as an additive function of avgfood and groupsize
model.3.1 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bAF*AF + bG*G,
a ~ dnorm( 0, 0.2 ),
bAF ~ dnorm( 0, 0.5 ),
bG ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
precis(model.3.1)
# model weight as a linear function of avgfood, groupsize and area
model.3.2 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bAF*AF + bG*G + bA*A,
a ~ dnorm( 0, 0.2 ),
bAF ~ dnorm( 0, 0.5 ),
bG ~ dnorm( 0, 0.5 ),
bA ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
precis(model.3.2)
# plot weight as a function of avgfood, holding groupsize and area at their respective means
avgfood.seq <- seq( from = -3 , to = 3 , length.out = 100 )
avgfood.predict.data <- data.frame(
A = 0,
G = 0,
AF = avgfood.seq
)
mu <- link( model.3.2 , data = avgfood.predict.data )
mu.mean <- apply( mu, 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pred.sim <- sim( model.3.2 , data = avgfood.predict.data , n = 1e4 )
pred.PI <- apply( pred.sim , 2 , PI, prob=0.95 )
plot( W ~ AF , data = data , type = "n" )
lines( avgfood.seq , mu.mean )
shade( mu.PI , avgfood.seq )
shade( pred.PI , avgfood.seq )
title('standardized weight vs. standardized avgfood \n while holding area and groupsize constant at the mean')
plot( coeftab( model.1.1 , model.1.2 , model.2 , model.3.1 , model.3.2 ), par=c( "bA" , "bG" , "bAF" ) )
library(rethinking)
data(foxes)
library(rethinking)
data(foxes)
data <- foxes
# standardize variables
data$W <- scale( data$weight )
data$A <- scale( data$area )
data$G <- scale( data$groupsize )
data$AF <- scale( data$avgfood )
# Question 1
# model body weight as a linear function of area
model.1.1 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bA*A,
a ~ dnorm( 0, 0.2 ),
bA ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
# compute posterior probability
area.seq <- seq( from = -3, to = 3, length.out = 100 )
area.seq.data <- list( A = area.seq )
mu <- link( model.1.1 , data = area.seq.data )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob = 0.95 )
# plot results
plot( W ~ A , data = data )
lines( area.seq , mu.mean )
shade( mu.PI , area.seq )
# model body weight as a linear function of groupsize
model.1.2 <- ulam(
alist(
W ~ dnorm( mu , sigma ),
mu <- a + bG*G,
a ~ dnorm( 0, 0.2 ),
bG ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
# compute posterior probability
groupsize.seq <- seq( from = -3 , to = 3 , length.out = 100 )
groupsize.seq.data <- list ( G = groupsize.seq )
mu <- link( model.1.2 , data = groupsize.seq.data )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu, 2 , PI , prob = 0.95 )
# plot results
plot( W ~ G , data = data )
lines( groupsize.seq , mu.mean )
shade( mu.PI , groupsize.seq )
# Question 2
# fit the multiple linear regression with weight as the outcome and both area and groupsize as predictor variables.
model.2 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bG*G + bA*A,
a ~ dnorm( 0, 0.2 ),
bG ~ dnorm( 0, 0.5 ),
bA ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
# plot territory size vs. weight, holding groupsize constant at its mean
area.predict.data <- data.frame( A = area.seq , G = 0 )
mu <- link( model.2 , data = area.predict.data )
mu.mean <- apply( mu, 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pred.sim <- sim( model.2 , data=area.predict.data , n=1e4 )
pred.PI <- apply( pred.sim , 2 , PI, prob=0.95 )
plot( W ~ A , data = data , type = "n" )
lines( area.seq , mu.mean )
shade( mu.PI , area.seq )
shade( pred.PI , area.seq )
title('standardized weight vs. standardized area \n while holding groupsize constant at its mean')
# plot groupsize vs. weight, holding area constant at its mean
groupsize.predict.data <- data.frame( A = 0 , G = groupsize.seq )
mu <- link( model.2 , groupsize.predict.data )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob = 0.95 )
pred.sim <- sim( model.2 , data=groupsize.predict.data , n=1e4 )
pred.PI <- apply( pred.sim , 2 , PI, prob=0.95 )
plot( W ~ G , data = data , type = "n" )
lines( area.seq , mu.mean )
shade( mu.PI , area.seq )
shade( pred.PI , area.seq )
title('standardized weight vs. standardized groupsize \n while holding area constant at its mean')
plot( coeftab( model.1.1 , model.1.2 , model.2 ), par=c( "bA" , "bG" ) )
# Question 3
# model weight as an additive function of avgfood and groupsize
model.3.1 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bAF*AF + bG*G,
a ~ dnorm( 0, 0.2 ),
bAF ~ dnorm( 0, 0.5 ),
bG ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
precis(model.3.1)
# model weight as a linear function of avgfood, groupsize and area
model.3.2 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bAF*AF + bG*G + bA*A,
a ~ dnorm( 0, 0.2 ),
bAF ~ dnorm( 0, 0.5 ),
bG ~ dnorm( 0, 0.5 ),
bA ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
precis(model.3.2)
# plot weight as a function of avgfood, holding groupsize and area at their respective means
avgfood.seq <- seq( from = -3 , to = 3 , length.out = 100 )
avgfood.predict.data <- data.frame(
A = 0,
G = 0,
AF = avgfood.seq
)
mu <- link( model.3.2 , data = avgfood.predict.data )
mu.mean <- apply( mu, 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pred.sim <- sim( model.3.2 , data = avgfood.predict.data , n = 1e4 )
pred.PI <- apply( pred.sim , 2 , PI, prob=0.95 )
plot( W ~ AF , data = data , type = "n" )
lines( avgfood.seq , mu.mean )
shade( mu.PI , avgfood.seq )
shade( pred.PI , avgfood.seq )
title('standardized weight vs. standardized avgfood \n while holding area and groupsize constant at the mean')
plot( coeftab( model.1.1 , model.1.2 , model.2 , model.3.1 , model.3.2 ), par=c( "bA" , "bG" , "bAF" ) )
# plot weight as a function of area, holding groupsize and avgfood at their respective means
area.seq <- seq( from = -3 , to = 3 , length.out = 100 )
area.predict.data <- data.frame(
A = area.seq,
G = 0,
AF = 0
)
mu <- link( model.3.2 , data = area.predict.data )
mu.mean <- apply( mu, 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pred.sim <- sim( model.3.2 , data = area.predict.data , n = 1e4 )
pred.PI <- apply( pred.sim , 2 , PI, prob=0.95 )
plot( W ~ A , data = data , type = "n" )
lines( area.seq , mu.mean )
shade( mu.PI , area.seq )
shade( pred.PI , area.seq )
mu <- link( model.3.2 , data = avgfood.predict.data )
mu.mean <- apply( mu, 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pred.sim <- sim( model.3.2 , data = avgfood.predict.data , n = 1e4 )
pred.PI <- apply( pred.sim , 2 , PI, prob=0.95 )
plot( W ~ AF , data = data , type = "n" )
lines( avgfood.seq , mu.mean )
shade( mu.PI , avgfood.seq )
shade( pred.PI , avgfood.seq )
title('standardized weight vs. standardized avgfood \n while holding area and groupsize constant at the mean')
# plot weight as a function of area, holding groupsize and avgfood at their respective means
area.seq <- seq( from = -3 , to = 3 , length.out = 100 )
area.predict.data <- data.frame(
A = area.seq,
G = 0,
AF = 0
)
mu <- link( model.3.2 , data = area.predict.data )
mu.mean <- apply( mu, 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pred.sim <- sim( model.3.2 , data = area.predict.data , n = 1e4 )
pred.PI <- apply( pred.sim , 2 , PI, prob=0.95 )
plot( W ~ A , data = data , type = "n" )
lines( area.seq , mu.mean )
shade( mu.PI , area.seq )
shade( pred.PI , area.seq )
title('standardized weight vs. standardized area \n while holding avgfood and groupsize constant at the mean')
plot( coeftab( model.1.1 , model.1.2 , model.2 , model.3.1 , model.3.2 ), par=c( "bA" , "bG" , "bAF" ) )
library(rethinking)
data(foxes)
data <- foxes
# standardize variables
data$W <- scale( data$weight )
data$A <- scale( data$area )
data$G <- scale( data$groupsize )
data$AF <- scale( data$avgfood )
# Question 3
# model weight as an additive function of avgfood and groupsize
model.3.1 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bAF*AF + bG*G,
a ~ dnorm( 0, 0.2 ),
bAF ~ dnorm( 0, 0.5 ),
bG ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
precis(model.3.1)
mu <- link( model.3.1 )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pre.sim <- sim( model.3.1 , n=1e4 )
pre.PI <- apply( pre.sim , 2 , PI , prob=0.95 )
plot( mu.mean ~ d$W , col=rangi2 , ylim=range(mu.PI) , xlab="Observed weight" , ylab="Predicted weight" )
plot( mu.mean ~ data$W , col=rangi2 , ylim=range(mu.PI) , xlab="Observed weight" , ylab="Predicted weight" )
abline( a=0 , b=1 , lty=2 )
for ( i in 1:nrow(data) ) lines( rep(data$W[i],2) , mu.PI[,i] , col=rangi2 )
# model weight as a linear function of avgfood, groupsize and area
model.3.2 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bAF*AF + bG*G + bA*A,
a ~ dnorm( 0, 0.2 ),
bAF ~ dnorm( 0, 0.5 ),
bG ~ dnorm( 0, 0.5 ),
bA ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
mu <- link( model.3.2 )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pre.sim <- sim( model.3.2 , n=1e4 )
pre.PI <- apply( pre.sim , 2 , PI , prob=0.95 )
plot( mu.mean ~ data$W , col=rangi2 , ylim=range(mu.PI) , xlab="Observed weight" , ylab="Predicted weight" )
abline( a=0 , b=1 , lty=2 )
for ( i in 1:nrow(data) ) lines( rep(data$W[i],2) , mu.PI[,i] , col=rangi2 )
mu <- link( model.2 )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pre.sim <- sim( model.2 , n=1e4 )
# Question 2
# fit the multiple linear regression with weight as the outcome and both area and groupsize as predictor variables.
model.2 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bG*G + bA*A,
a ~ dnorm( 0, 0.2 ),
bG ~ dnorm( 0, 0.5 ),
bA ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
mu <- link( model.2 )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pre.sim <- sim( model.2 , n=1e4 )
pre.PI <- apply( pre.sim , 2 , PI , prob=0.95 )
plot( mu.mean ~ data$W , col=rangi2 , ylim=range(mu.PI) , xlab="Observed weight" , ylab="Predicted weight" )
abline( a=0 , b=1 , lty=2 )
for ( i in 1:nrow(data) ) lines( rep(data$W[i],2) , mu.PI[,i] , col=rangi2 )
mu <- link( model.3.1 )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pre.sim <- sim( model.3.1 , n=1e4 )
pre.PI <- apply( pre.sim , 2 , PI , prob=0.95 )
plot( mu.mean ~ data$W , col=rangi2 , ylim=range(mu.PI) , xlab="Observed weight" , ylab="Predicted weight" )
abline( a=0 , b=1 , lty=2 )
identify( x=data$AF , y=mu.mean , labels=data$group )
mu <- link( model.3.1 )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pre.sim <- sim( model.3.1 , n=1e4 )
pre.PI <- apply( pre.sim , 2 , PI , prob=0.95 )
plot( mu.mean ~ data$W , col=rangi2 , ylim=range(mu.PI) , xlab="Observed weight" , ylab="Predicted weight" )
abline( a=0 , b=1 , lty=2 )
for ( i in 1:nrow(data) ) lines( rep(data$W[i],2) , mu.PI[,i] , col=rangi2 )
identify( x=data$AF , y=mu.mean , labels=data$group )
identify( x=data$AF , y=mu.mean , labels=data$group )
library(rethinking)
data(foxes)
data <- foxes
library(rethinking)
data(foxes)
data <- foxes
# standardize variables
data$W <- scale( data$weight )
data$A <- scale( data$area )
data$G <- scale( data$groupsize )
data$AF <- scale( data$avgfood )
# model weight as a linear function of avgfood, groupsize and area
model.3.2 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bAF*AF + bG*G + bA*A,
a ~ dnorm( 0, 0.2 ),
bAF ~ dnorm( 0, 0.5 ),
bG ~ dnorm( 0, 0.5 ),
bA ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
pairs( ~ AF + A , data )
pairs( ~ W + AF + A , data )
# Question 2
# fit the multiple linear regression with weight as the outcome and both area and groupsize as predictor variables.
model.2 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bG*G + bA*A,
a ~ dnorm( 0, 0.2 ),
bG ~ dnorm( 0, 0.5 ),
bA ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
precis(model.2)
# plot territory size vs. weight, holding groupsize constant at its mean
area.predict.data <- data.frame( A = area.seq , G = 0 )
mu <- link( model.2 , data = area.predict.data )
probability
# compute posterior probability
area.seq <- seq( from = -3, to = 3, length.out = 100 )
area.seq.data <- list( A = area.seq )
# plot territory size vs. weight, holding groupsize constant at its mean
area.predict.data <- data.frame( A = area.seq , G = 0 )
mu <- link( model.2 , data = area.predict.data )
mu.mean <- apply( mu, 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pred.sim <- sim( model.2 , data=area.predict.data , n=1e4 )
pred.PI <- apply( pred.sim , 2 , PI, prob=0.95 )
plot( W ~ A , data = data , type = "n" )
lines( area.seq , mu.mean )
shade( mu.PI , area.seq )
shade( pred.PI , area.seq )
title('standardized weight vs. standardized area \n while holding groupsize constant at its mean')
# plot groupsize vs. weight, holding area constant at its mean
groupsize.predict.data <- data.frame( A = 0 , G = groupsize.seq )
# compute posterior probability
groupsize.seq <- seq( from = -3 , to = 3 , length.out = 100 )
groupsize.seq.data <- list ( G = groupsize.seq )
# plot groupsize vs. weight, holding area constant at its mean
groupsize.predict.data <- data.frame( A = 0 , G = groupsize.seq )
mu <- link( model.2 , groupsize.predict.data )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob = 0.95 )
pred.sim <- sim( model.2 , data=groupsize.predict.data , n=1e4 )
pred.PI <- apply( pred.sim , 2 , PI, prob=0.95 )
plot( W ~ G , data = data , type = "n" )
lines( area.seq , mu.mean )
shade( mu.PI , area.seq )
shade( pred.PI , area.seq )
title('standardized weight vs. standardized groupsize \n while holding area constant at its mean')
plot( coeftab( model.1.1 , model.1.2 , model.2 ), par=c( "bA" , "bG" ) )
# Question 3
# model weight as an additive function of avgfood and groupsize
model.3.1 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bAF*AF + bG*G,
a ~ dnorm( 0, 0.2 ),
bAF ~ dnorm( 0, 0.5 ),
bG ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
precis(model.3.1)
# model weight as a linear function of avgfood, groupsize and area
model.3.2 <- ulam(
alist(
W ~ dnorm( mu, sigma ),
mu <- a + bAF*AF + bG*G + bA*A,
a ~ dnorm( 0, 0.2 ),
bAF ~ dnorm( 0, 0.5 ),
bG ~ dnorm( 0, 0.5 ),
bA ~ dnorm( 0, 0.5 ),
sigma ~ dexp( 1 )
),
data=data, chains=4 , cores=4 , iter=1000 )
precis(model.3.2)
# plot weight as a function of avgfood, holding groupsize and area at their respective means
avgfood.seq <- seq( from = -3 , to = 3 , length.out = 100 )
avgfood.predict.data <- data.frame(
A = 0,
G = 0,
AF = avgfood.seq
)
mu <- link( model.3.2 , data = avgfood.predict.data )
mu.mean <- apply( mu, 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pred.sim <- sim( model.3.2 , data = avgfood.predict.data , n = 1e4 )
pred.PI <- apply( pred.sim , 2 , PI, prob=0.95 )
plot( W ~ AF , data = data , type = "n" )
lines( avgfood.seq , mu.mean )
shade( mu.PI , avgfood.seq )
shade( pred.PI , avgfood.seq )
title('standardized weight vs. standardized avgfood \n while holding area and groupsize constant at the mean')
# plot weight as a function of area, holding groupsize and avgfood at their respective means
area.seq <- seq( from = -3 , to = 3 , length.out = 100 )
area.predict.data <- data.frame(
A = area.seq,
G = 0,
AF = 0
)
mu <- link( model.3.2 , data = area.predict.data )
mu.mean <- apply( mu, 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pred.sim <- sim( model.3.2 , data = area.predict.data , n = 1e4 )
pred.PI <- apply( pred.sim , 2 , PI, prob=0.95 )
plot( W ~ A , data = data , type = "n" )
lines( area.seq , mu.mean )
shade( mu.PI , area.seq )
shade( pred.PI , area.seq )
title('standardized weight vs. standardized area \n while holding avgfood and groupsize constant at the mean')
plot( coeftab( model.1.1 , model.1.2 , model.2 , model.3.1 , model.3.2 ), par=c( "bA" , "bG" , "bAF" ) )
mu <- link( model.3.1 )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pre.sim <- sim( model.3.1 , n=1e4 )
pre.PI <- apply( pre.sim , 2 , PI , prob=0.95 )
plot( mu.mean ~ data$W , col=rangi2 , ylim=range(mu.PI) , xlab="Observed weight" , ylab="Predicted weight" )
abline( a=0 , b=1 , lty=2 )
for ( i in 1:nrow(data) ) lines( rep(data$W[i],2) , mu.PI[,i] , col=rangi2 )
mu <- link( model.2 )
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.95 )
pre.sim <- sim( model.2 , n=1e4 )
pre.PI <- apply( pre.sim , 2 , PI , prob=0.95 )
plot( mu.mean ~ data$W , col=rangi2 , ylim=range(mu.PI) , xlab="Observed weight" , ylab="Predicted weight" )
abline( a=0 , b=1 , lty=2 )
for ( i in 1:nrow(data) ) lines( rep(data$W[i],2) , mu.PI[,i] , col=rangi2 )
pairs( ~ W + AF + A , data )
